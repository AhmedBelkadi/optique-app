services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: optique-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - env.docker.prod
    volumes:
      - uploads:/app/public/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - optique-network

  db:
    image: postgres:15-alpine
    container_name: optique-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: optique_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d optique_app"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - optique-network

volumes:
  postgres_data:
    driver: local
  uploads:
    driver: local

networks:
  optique-network:
    driver: bridge
