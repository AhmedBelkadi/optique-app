services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: optique-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      WATCHPACK_POLLING: "true"
      DATABASE_URL: postgresql://postgres:postgres@db:5432/optique_app_dev
      ENCRYPTION_KEY: ac6164c2f65d4098acb97f934ce18aff
      APP_NAME: "Optique App Dev"
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      GMAIL_USER: ahmad.belkadi12@gmail.com
      GMAIL_APP_PASSWORD: "zlmn vyai apeg ijfj"
      LOG_LEVEL: debug
    volumes:
      - .:/app                # Mount source code
      - /app/node_modules     # Keep node_modules in container
      - /app/.next            # Next.js build cache
      - uploads:/app/public/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - optique-network
    command: sh -c "npx prisma migrate dev --name init && npm run db:seed && npm run dev"

  db:
    image: postgres:15-alpine
    container_name: optique-db-dev
    environment:
      POSTGRES_DB: optique_app_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - optique-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d optique_app_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_dev_data:
    driver: local
  uploads:
    driver: local

networks:
  optique-network:
    driver: bridge
